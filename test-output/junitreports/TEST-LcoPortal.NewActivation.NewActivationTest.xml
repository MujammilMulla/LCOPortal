<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-UBJL9G9" failures="0" tests="6" name="LcoPortal.NewActivation.NewActivationTest" time="24.930" errors="2" timestamp="2024-03-28T17:30:42 IST" skipped="4">
  <testcase classname="LcoPortal.NewActivation.NewActivationTest" name="newActivationTest" time="2.706">
    <skipped/>
  </testcase> <!-- newActivationTest -->
  <testcase classname="LcoPortal.NewActivation.NewActivationTest" name="newActivationTest" time="0.318">
    <skipped/>
  </testcase> <!-- newActivationTest -->
  <testcase classname="LcoPortal.NewActivation.NewActivationTest" name="bMethod" time="20.054">
    <error message="Unable to locate element: //input[@name=&#039;UserName&#039;]
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: &#039;4.18.1&#039;, revision: &#039;b1d3319b48&#039;
System info: os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.10&#039;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [4bbd3f37-e715-44d3-9f69-18fd8d1fbee8, findElement {using=xpath, value=//input[@name=&#039;UserName&#039;]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 124.0.1, moz:accessibilityChecks: false, moz:buildID: 20240321230221, moz:debuggerAddress: 127.0.0.1:48931, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 5828, moz:profile: C:\Users\user\AppData\Local..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:48931/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 4bbd3f37-e715-44d3-9f69-18fd8d1fbee8" type="org.openqa.selenium.NoSuchElementException">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //input[@name='UserName']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [4bbd3f37-e715-44d3-9f69-18fd8d1fbee8, findElement {using=xpath, value=//input[@name='UserName']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 124.0.1, moz:accessibilityChecks: false, moz:buildID: 20240321230221, moz:debuggerAddress: 127.0.0.1:48931, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 5828, moz:profile: C:\Users\user\AppData\Local..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:48931/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 4bbd3f37-e715-44d3-9f69-18fd8d1fbee8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy16.sendKeys(Unknown Source)
at LcoPortal.ObjectRepository.LoginPage.loginToApplication(LoginPage.java:60)
at LcoPortal.GenericUtilities.BaseClass.bMethod(BaseClass.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- bMethod -->
  <testcase classname="LcoPortal.NewActivation.NewActivationTest" name="newActivationTest" time="0.344">
    <error message="Error: Could not find instance of React in given element
Build info: version: &#039;4.18.1&#039;, revision: &#039;b1d3319b48&#039;
System info: os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.10&#039;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [4bbd3f37-e715-44d3-9f69-18fd8d1fbee8, executeScript {args=[#root, Anonymous, {}, {}, null], script=function getReactElements({rootSelector, selector, props, state, context}) {
     props = props ? JSON.parse(props) : {};
     state = state ? JSON.parse(state) : {};

     let elements = window.resq.resq$$(selector, rootSelector ? document.querySelector(rootSelector) : context)

     if (Object.keys(props).length) {
         elements = elements.byProps(props)
     }
     if (Object.keys(state).length) {
         elements = elements.byState(state)
     }

     return elements;
}

function getWebElements({rootSelector, selector, props, state, context}) {
 let elements = getReactElements({rootSelector, selector, props, state, context});

 if (!elements.length) {
     return []
 }
 var nodes = []
 elements.forEach(function(element) {
     if (element.isFragment) {
         nodes = nodes.concat(element.node || [])
     } else if (element.node) {
         nodes.push(element.node)
     }
 })
 return [...nodes]
}

function getObjectDetails({rootSelector, selector, props, state, context, elementIndex, objectName, key}) {
    var nodes = getReactElements({rootSelector, selector, props, state, context});
    if(nodes.length &gt;= elementIndex) {
    console.log(nodes[elementIndex][objectName])
        return getValueFromNestedObject(nodes[elementIndex][objectName], key)
    } else {
        return null;
    }
}

function getValueFromNestedObject(obj, key) {
        if(!key) {
            return obj;
        }
        const properties = key.split(&#039;.&#039;);
        return getValueFromNestedObject(obj[properties.shift()], properties.join(&#039;.&#039;))
}return getWebElements({
    rootSelector: arguments[0],
    selector: arguments[1],
    props: arguments[2],
    state: arguments[3],
    context: arguments[4]
})}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 124.0.1, moz:accessibilityChecks: false, moz:buildID: 20240321230221, moz:debuggerAddress: 127.0.0.1:48931, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 5828, moz:profile: C:\Users\user\AppData\Local..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:48931/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 4bbd3f37-e715-44d3-9f69-18fd8d1fbee8" type="org.openqa.selenium.JavascriptException">
      <![CDATA[org.openqa.selenium.JavascriptException: Error: Could not find instance of React in given element
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [4bbd3f37-e715-44d3-9f69-18fd8d1fbee8, executeScript {args=[#root, Anonymous, {}, {}, null], script=function getReactElements({rootSelector, selector, props, state, context}) {
     props = props ? JSON.parse(props) : {};
     state = state ? JSON.parse(state) : {};

     let elements = window.resq.resq$$(selector, rootSelector ? document.querySelector(rootSelector) : context)

     if (Object.keys(props).length) {
         elements = elements.byProps(props)
     }
     if (Object.keys(state).length) {
         elements = elements.byState(state)
     }

     return elements;
}

function getWebElements({rootSelector, selector, props, state, context}) {
 let elements = getReactElements({rootSelector, selector, props, state, context});

 if (!elements.length) {
     return []
 }
 var nodes = []
 elements.forEach(function(element) {
     if (element.isFragment) {
         nodes = nodes.concat(element.node || [])
     } else if (element.node) {
         nodes.push(element.node)
     }
 })
 return [...nodes]
}

function getObjectDetails({rootSelector, selector, props, state, context, elementIndex, objectName, key}) {
    var nodes = getReactElements({rootSelector, selector, props, state, context});
    if(nodes.length >= elementIndex) {
    console.log(nodes[elementIndex][objectName])
        return getValueFromNestedObject(nodes[elementIndex][objectName], key)
    } else {
        return null;
    }
}

function getValueFromNestedObject(obj, key) {
        if(!key) {
            return obj;
        }
        const properties = key.split('.');
        return getValueFromNestedObject(obj[properties.shift()], properties.join('.'))
}return getWebElements({
    rootSelector: arguments[0],
    selector: arguments[1],
    props: arguments[2],
    state: arguments[3],
    context: arguments[4]
})}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 124.0.1, moz:accessibilityChecks: false, moz:buildID: 20240321230221, moz:debuggerAddress: 127.0.0.1:48931, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 5828, moz:profile: C:\Users\user\AppData\Local..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:48931/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 4bbd3f37-e715-44d3-9f69-18fd8d1fbee8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:464)
at io.github.reactwebdriver.ByReact.executeQuery(ByReact.java:36)
at io.github.reactwebdriver.ByReactComponent.getObject(ByReactComponent.java:67)
at io.github.reactwebdriver.BaseBy.findElement(BaseBy.java:40)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:81)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at LcoPortal.NewActivation.NewActivationTest.newActivationTest(NewActivationTest.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- newActivationTest -->
  <testcase classname="LcoPortal.NewActivation.NewActivationTest" name="newActivationTest" time="1.167">
    <skipped/>
  </testcase> <!-- newActivationTest -->
  <testcase classname="LcoPortal.NewActivation.NewActivationTest" name="newActivationTest" time="0.341">
    <skipped/>
  </testcase> <!-- newActivationTest -->
</testsuite> <!-- LcoPortal.NewActivation.NewActivationTest -->
